import type { Resource } from 'app/interfaces/models/game/resource';
import type { PlayableTribe, Tribe } from 'app/interfaces/models/game/tribe';
import type {
  NatureUnitId,
  Unit,
  UnitId,
} from 'app/interfaces/models/game/unit';
import type { VillageSize } from 'app/interfaces/models/game/village';
import { seededRandomIntFromInterval } from 'app/utils/common';
import { prngMulberry32 } from 'ts-seedrandom';
import { getUnitByTribeAndTier } from 'app/(game)/(village-slug)/utils/units';
import { PLAYER_ID } from 'app/constants/player';
import type { Seeder } from 'app/interfaces/db';
import type { TileModel } from 'app/interfaces/models/game/tile';
import { batchInsert } from 'app/db/utils/batch-insert';

const oasisTroopCombinations = new Map<
  Resource,
  [NatureUnitId, number, number][]
>([
  [
    'wood',
    [
      ['WILD_BOAR', 2, 11],
      ['WOLF', 2, 7],
      ['BEAR', 2, 5],
    ],
  ],
  [
    'clay',
    [
      ['RAT', 3, 12],
      ['SPIDER', 2, 10],
      ['WILD_BOAR', 2, 7],
    ],
  ],
  [
    'iron',
    [
      ['RAT', 2, 16],
      ['SPIDER', 2, 12],
      ['BAT', 2, 10],
    ],
  ],
  [
    'wheat',
    [
      ['RAT', 2, 20],
      ['SERPENT', 2, 18],
      ['TIGER', 2, 11],
      ['CROCODILE', 2, 9],
    ],
  ],
]);

// Each number array determines [min, max] of units.
// - Villages of size sm or larger should have scouts present.
// - Villages of size lg should have rams and catapults present
// - Villages of size xs should have between 20-120 troops present composed of only first and second unit
// - Villages of size sm should have between 150-450 troops present composed of only first and second unit + scouts
// - Villages of size md should have between 600-1200 troops present composed of any unit except rams and catapults
// - Villages of size lg should have between 1500-2500 troops present composed of any unit
// TODO: Units must be added and numbers must be tweaked!
// TODO: New village sizes were added, add missing stuff!
// TODO: These should be generated by some function
const npcUnitCompositionByTribeAndSize = new Map<
  Tribe,
  Map<VillageSize, [UnitId, number, number][]>
>([
  [
    'gauls',
    new Map([
      [
        'xs',
        [
          ['PHALANX', 10, 50],
          ['SWORDSMAN', 5, 40],
        ],
      ],
      [
        'sm',
        [
          ['PHALANX', 100, 200],
          ['SWORDSMAN', 60, 150],
          ['GAUL_SCOUT', 5, 10],
        ],
      ],
      [
        'md',
        [
          ['PHALANX', 300, 600],
          ['SWORDSMAN', 250, 400],
          ['GAUL_SCOUT', 20, 80],
          ['THEUTATES_THUNDER', 5, 40],
          ['DRUIDRIDER', 5, 40],
          ['HAEDUAN', 5, 40],
        ],
      ],
      [
        'lg',
        [
          ['PHALANX', 700, 1200],
          ['SWORDSMAN', 5, 40],
          ['GAUL_SCOUT', 5, 40],
          ['THEUTATES_THUNDER', 5, 40],
          ['DRUIDRIDER', 5, 40],
          ['HAEDUAN', 5, 40],
          ['GAUL_RAM', 20, 100],
          ['GAUL_CATAPULT', 20, 50],
        ],
      ],
    ]),
  ],
  [
    'romans',
    new Map([
      [
        'xs',
        [
          ['LEGIONNAIRE', 10, 35],
          ['PRAETORIAN', 5, 25],
        ],
      ],
      [
        'sm',
        [
          ['LEGIONNAIRE', 10, 35],
          ['PRAETORIAN', 5, 25],
          ['ROMAN_SCOUT', 5, 10],
        ],
      ],
      [
        'md',
        [
          ['LEGIONNAIRE', 10, 35],
          ['PRAETORIAN', 5, 25],
          ['ROMAN_SCOUT', 5, 10],
        ],
      ],
      [
        'lg',
        [
          ['LEGIONNAIRE', 10, 35],
          ['PRAETORIAN', 5, 25],
          ['ROMAN_SCOUT', 5, 10],
          ['ROMAN_RAM', 20, 100],
          ['ROMAN_CATAPULT', 20, 50],
        ],
      ],
    ]),
  ],
  [
    'teutons',
    new Map([
      [
        'xs',
        [
          ['CLUBSWINGER', 30, 100],
          ['SPEARMAN', 5, 30],
        ],
      ],
      [
        'sm',
        [
          ['CLUBSWINGER', 30, 100],
          ['SPEARMAN', 5, 30],
          ['TEUTONIC_SCOUT', 5, 10],
        ],
      ],
      [
        'md',
        [
          ['CLUBSWINGER', 30, 100],
          ['SPEARMAN', 5, 30],
          ['TEUTONIC_SCOUT', 5, 10],
        ],
      ],
      [
        'lg',
        [
          ['CLUBSWINGER', 30, 100],
          ['SPEARMAN', 5, 30],
          ['TEUTONIC_SCOUT', 5, 10],
          ['TEUTONIC_RAM', 20, 100],
          ['TEUTONIC_CATAPULT', 20, 50],
        ],
      ],
    ]),
  ],
  [
    'huns',
    new Map([
      [
        'xs',
        [
          ['MERCENARY', 15, 45],
          ['BOWMAN', 5, 25],
        ],
      ],
      [
        'sm',
        [
          ['MERCENARY', 15, 45],
          ['BOWMAN', 5, 25],
          ['HUN_SCOUT', 5, 10],
        ],
      ],
      [
        'md',
        [
          ['MERCENARY', 15, 45],
          ['BOWMAN', 5, 25],
          ['HUN_SCOUT', 5, 10],
        ],
      ],
      [
        'lg',
        [
          ['MERCENARY', 15, 45],
          ['BOWMAN', 5, 25],
          ['HUN_SCOUT', 5, 10],
          ['HUN_RAM', 20, 100],
          ['HUN_CATAPULT', 20, 50],
        ],
      ],
    ]),
  ],
  [
    'egyptians',
    new Map([
      [
        'xs',
        [
          ['SLAVE_MILITIA', 30, 70],
          ['ASH_WARDEN', 5, 20],
        ],
      ],
      [
        'sm',
        [
          ['SLAVE_MILITIA', 30, 70],
          ['ASH_WARDEN', 5, 20],
          ['EGYPTIAN_SCOUT', 5, 10],
        ],
      ],
      [
        'md',
        [
          ['SLAVE_MILITIA', 30, 70],
          ['ASH_WARDEN', 5, 20],
          ['EGYPTIAN_SCOUT', 5, 10],
        ],
      ],
      [
        'lg',
        [
          ['SLAVE_MILITIA', 30, 70],
          ['ASH_WARDEN', 5, 20],
          ['EGYPTIAN_SCOUT', 5, 10],
          ['EGYPTIAN_RAM', 20, 100],
          ['EGYPTIAN_CATAPULT', 20, 50],
        ],
      ],
    ]),
  ],
]);

type VillagesSelectRow = {
  player_id: number;
  tile_id: number;
  tribe: PlayableTribe;
  x: number;
  y: number;
};

type OasisSelectRow = {
  tile_id: number;
  x: number;
  y: number;
  resource: Resource;
  bonus: number;
};

export const troopSeeder: Seeder = (database, server): void => {
  const prng = prngMulberry32(server.seed);

  const results: [Unit['id'], number, TileModel['id'], TileModel['id']][] = [];

  const villages = database.selectObjects(`
    SELECT players.id as player_id,
           players.tribe,
           tiles.id   AS tile_id,
           tiles.x,
           tiles.y
    FROM villages
           INNER JOIN players ON villages.player_id = players.id
           INNER JOIN tiles ON villages.tile_id = tiles.id;
  `) as VillagesSelectRow[];

  for (const { tribe, tile_id, player_id } of villages) {
    if (player_id === PLAYER_ID) {
      const tier1UnitIt = getUnitByTribeAndTier(tribe, 'tier-1');

      // Player starts with 3 tier-1 units and a hero
      results.push(
        [tier1UnitIt.id, 3, tile_id, tile_id],
        ['HERO', 1, tile_id, tile_id],
      );
      continue;
    }

    // TODO: Village sizes are still missing, hardcode 'xs' for now
    // const villageSize = getVillageSize(
    //   server.configuration.mapSize,
    //   x,
    //   y,
    // );
    const villageSize = 'xs';

    const unitCompositionByTribe = npcUnitCompositionByTribeAndSize.get(tribe)!;
    const unitCompositionBySize = unitCompositionByTribe.get(villageSize)!;

    for (const [unitId, min, max] of unitCompositionBySize) {
      const amount = seededRandomIntFromInterval(prng, min, max);

      results.push([unitId, amount, tile_id, tile_id]);
    }
  }

  const oasis = database.selectObjects(`
    SELECT tiles.id AS tile_id,
           oasis.resource
    FROM oasis
           INNER JOIN tiles ON oasis.tile_id = tiles.id
    WHERE oasis.village_id IS NULL;
  `) as OasisSelectRow[];

  for (const { tile_id, resource } of oasis) {
    const troopIdsWithAmount = oasisTroopCombinations.get(resource)!;

    for (const [unitId, min, max] of troopIdsWithAmount) {
      const amount = seededRandomIntFromInterval(prng, min, max);
      results.push([unitId, amount, tile_id, tile_id]);
    }
  }

  batchInsert(
    database,
    'troops',
    ['unit_id', 'amount', 'tile_id', 'source'],
    results,
    (row) => row,
  );
};
